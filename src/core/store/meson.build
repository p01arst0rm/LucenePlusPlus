# liblucene.store build file
#============================================================================

liblucene_inc += include_directories('.')
liblucene_store_dir = meson.current_source_dir()

liblucene_src += files(
    join_paths(liblucene_store_dir, 'BufferedIndexInput.cpp'),
    join_paths(liblucene_store_dir, 'BufferedIndexOutput.cpp'),
    join_paths(liblucene_store_dir, 'ChecksumIndexInput.cpp'),
    join_paths(liblucene_store_dir, 'ChecksumIndexOutput.cpp'),
    join_paths(liblucene_store_dir, 'Directory.cpp'),
    join_paths(liblucene_store_dir, 'FileSwitchDirectory.cpp'),
    join_paths(liblucene_store_dir, 'FSDirectory.cpp'),
    join_paths(liblucene_store_dir, 'FSLockFactory.cpp'),
    join_paths(liblucene_store_dir, 'IndexInput.cpp'),
    join_paths(liblucene_store_dir, 'IndexOutput.cpp'),
    join_paths(liblucene_store_dir, 'Lock.cpp'),
    join_paths(liblucene_store_dir, 'LockFactory.cpp'),
    join_paths(liblucene_store_dir, 'MMapDirectory.cpp'),
    join_paths(liblucene_store_dir, 'NativeFSLockFactory.cpp'),
    join_paths(liblucene_store_dir, 'NoLockFactory.cpp'),
    join_paths(liblucene_store_dir, 'RAMDirectory.cpp'),
    join_paths(liblucene_store_dir, 'RAMFile.cpp'),
    join_paths(liblucene_store_dir, 'RAMInputStream.cpp'),
    join_paths(liblucene_store_dir, 'RAMOutputStream.cpp'),
    join_paths(liblucene_store_dir, 'SimpleFSDirectory.cpp'),
    join_paths(liblucene_store_dir, 'SimpleFSLockFactory.cpp'),
    join_paths(liblucene_store_dir, 'SingleInstanceLockFactory.cpp'))
